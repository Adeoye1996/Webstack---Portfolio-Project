{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Webstack---Portfolio-Project\\\\school-website\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Replaced useHistory with useNavigate\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, Box, Grid } from '@mui/material';\nimport './Login.css'; // Assuming some CSS styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  userRole\n}) => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // Replaced useHistory with useNavigate\n\n  // Dummy credentials for testing login\n  const dummyCredentials = {\n    Parent: {\n      username: 'parent123',\n      password: 'password123'\n    },\n    Staff: {\n      username: 'staff123',\n      password: 'password123'\n    },\n    Admin: {\n      username: 'admin123',\n      password: 'password123'\n    }\n  };\n\n  // Handle Input Changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials({\n      ...credentials,\n      [name]: value\n    });\n  };\n\n  // Handle Form Submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validation to check if fields are empty\n    if (!credentials.username || !credentials.password) {\n      setError('Both fields are required!');\n      return;\n    }\n    try {\n      // Perform login via backend\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\n        username: credentials.username,\n        password: credentials.password,\n        role: userRole // Pass the user role here\n      });\n\n      // Check if the response contains a token\n      if (response.data.token) {\n        const {\n          role\n        } = response.data.user; // Assuming the response contains user info\n        if (role === 'parent') navigate('/parent-dashboard');\n        if (role === 'staff') navigate('/staff-dashboard');\n        if (role === 'admin') navigate('/admin-dashboard');\n      }\n    } catch (err) {\n      // Dummy login check for testing without backend\n      if (credentials.username === dummyCredentials[userRole].username && credentials.password === dummyCredentials[userRole].password) {\n        setError('');\n        alert(`${userRole} Login Successful!`);\n        navigate(`/${userRole.toLowerCase()}-dashboard`); // Redirect to the respective dashboard\n      } else {\n        setError('Invalid username or password');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"login-container\",\n        boxShadow: 3,\n        p: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          align: \"center\",\n          gutterBottom: true,\n          children: [userRole, \" Login\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Username\",\n                variant: \"outlined\",\n                fullWidth: true,\n                name: \"username\",\n                value: credentials.username,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Password\",\n                type: \"password\",\n                variant: \"outlined\",\n                fullWidth: true,\n                name: \"password\",\n                value: credentials.password,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"error\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"submit\",\n                fullWidth: true,\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"UrQ9GXxuDVPWyb1hZgiSTtdgAic=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","axios","Container","TextField","Button","Typography","Box","Grid","jsxDEV","_jsxDEV","Login","userRole","_s","credentials","setCredentials","username","password","error","setError","navigate","dummyCredentials","Parent","Staff","Admin","handleChange","e","name","value","target","handleSubmit","preventDefault","response","post","role","data","token","user","err","alert","toLowerCase","className","children","maxWidth","boxShadow","p","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","container","spacing","item","xs","label","fullWidth","onChange","type","color","_c","$RefreshReg$"],"sources":["C:/Users/user/Webstack---Portfolio-Project/school-website/client/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Replaced useHistory with useNavigate\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, Box, Grid } from '@mui/material';\nimport './Login.css'; // Assuming some CSS styling\n\nconst Login = ({ userRole }) => {\n  const [credentials, setCredentials] = useState({ username: '', password: '' });\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // Replaced useHistory with useNavigate\n\n  // Dummy credentials for testing login\n  const dummyCredentials = {\n    Parent: { username: 'parent123', password: 'password123' },\n    Staff: { username: 'staff123', password: 'password123' },\n    Admin: { username: 'admin123', password: 'password123' }\n  };\n\n  // Handle Input Changes\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setCredentials({ ...credentials, [name]: value });\n  };\n\n  // Handle Form Submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validation to check if fields are empty\n    if (!credentials.username || !credentials.password) {\n      setError('Both fields are required!');\n      return;\n    }\n\n    try {\n      // Perform login via backend\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\n        username: credentials.username,\n        password: credentials.password,\n        role: userRole // Pass the user role here\n      });\n\n      // Check if the response contains a token\n      if (response.data.token) {\n        const { role } = response.data.user; // Assuming the response contains user info\n        if (role === 'parent') navigate('/parent-dashboard');\n        if (role === 'staff') navigate('/staff-dashboard');\n        if (role === 'admin') navigate('/admin-dashboard');\n      }\n    } catch (err) {\n      // Dummy login check for testing without backend\n      if (\n        credentials.username === dummyCredentials[userRole].username &&\n        credentials.password === dummyCredentials[userRole].password\n      ) {\n        setError('');\n        alert(`${userRole} Login Successful!`);\n        navigate(`/${userRole.toLowerCase()}-dashboard`); // Redirect to the respective dashboard\n      } else {\n        setError('Invalid username or password');\n      }\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n      <Container maxWidth=\"sm\">\n        <Box className=\"login-container\" boxShadow={3} p={3}>\n          <Typography variant=\"h4\" align=\"center\" gutterBottom>\n            {userRole} Login\n          </Typography>\n          <form onSubmit={handleSubmit}>\n            <Grid container spacing={3}>\n              {/* Username Field */}\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Username\"\n                  variant=\"outlined\"\n                  fullWidth\n                  name=\"username\"\n                  value={credentials.username}\n                  onChange={handleChange}\n                />\n              </Grid>\n\n              {/* Password Field */}\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Password\"\n                  type=\"password\"\n                  variant=\"outlined\"\n                  fullWidth\n                  name=\"password\"\n                  value={credentials.password}\n                  onChange={handleChange}\n                />\n              </Grid>\n\n              {/* Error Message */}\n              {error && (\n                <Grid item xs={12}>\n                  <Typography color=\"error\">{error}</Typography>\n                </Grid>\n              )}\n\n              {/* Submit Button */}\n              <Grid item xs={12}>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>\n                  Login\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}